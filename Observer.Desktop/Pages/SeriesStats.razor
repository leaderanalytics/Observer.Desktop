@inherits BasePage
<h3>Series Statistics</h3>

<MudContainer Style="width:50vw;margin-left:auto;margin-right:auto;">
    <MudContainer Class="d-flex flex-row gap-5 mt-10 " >
        <MudText>Observation Count:</MudText>
        <MudText Style="margin-left:auto">@((stats?.ObservationCount ?? 0).ToString("#,##0"))</MudText>
    </MudContainer>

    <MudContainer Class="d-flex flex-row gap-5 mt-3" >
        <MudText>Vintage Count:</MudText>
        <MudText Style="margin-left:auto">@((stats?.VintageCount ?? 0).ToString("#,##0"))</MudText>
    </MudContainer>

    <MudContainer Class="d-flex flex-row gap-5 mt-3">
        <MudText>First Vintage Date:</MudText>
        <MudText Style="margin-left:auto">@(stats?.FirstVintageDate?.ToString(Constants.DateFormat) ?? "N/A")</MudText>
    </MudContainer>

    <MudContainer Class="d-flex flex-row gap-5 mt-3">
        <MudText>Last Vintage Date:</MudText>
        <MudText Style="margin-left:auto">@(stats?.LastVintageDate?.ToString(Constants.DateFormat) ?? "N/A")</MudText>
    </MudContainer>

    <MudContainer Class="d-flex flex-row gap-5 mt-3">
        <MudText>First Observation Date:</MudText>
        <MudText Style="margin-left:auto">@(stats?.FirstObservationDate?.ToString(Constants.DateFormat) ?? "N/A")</MudText>
    </MudContainer>

    <MudContainer Class="d-flex flex-row gap-5 mt-3">
        <MudText>Last Observation Date:</MudText>
        <MudText Style="margin-left:auto">@(stats?.LastObservationDate?.ToString(Constants.DateFormat) ?? "N/A")</MudText>
    </MudContainer>

    <MudContainer Class="d-flex flex-row gap-5 mt-3">
        <MudText>Minimum Value:</MudText>
        <MudText Style="margin-left:auto">@((stats?.MinValue ?? 0).ToString(Constants.DecimalFormat))</MudText>
    </MudContainer>

    <MudContainer Class="d-flex flex-row gap-5 mt-3">
        <MudText>Maximum Value:</MudText>
        <MudText Style="margin-left:auto">@((stats?.MaxValue ?? 0).ToString(Constants.DecimalFormat))</MudText>
    </MudContainer>
</MudContainer>

@code {

    [Parameter] public string symbol { get; set; }
    [Parameter] public IEnumerable<FredObservation> obs { get; set; }
    [Parameter] public EventCallback<string> symbolChanged { get; set; }
    [Parameter] public EventCallback<IEnumerable<FredObservation>> obsChanged { get; set; }
    private SeriesStatistics stats;


    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        if (stats is null)
            await RefreshClickHandler();
    }


    private async Task RefreshClickHandler()
    {
        LeaderAnalytics.Vyntix.Elements.RowOpResult<SeriesStatistics> result = await serviceClient.CallAsync(x => x.ObservationsService.GetSeriesStatistics(symbol));

        if (!string.IsNullOrEmpty(result.Message))
            await MessageService.Error(result.Message);
        else
            stats = result.Item;
    }
}


