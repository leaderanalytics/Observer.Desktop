@inherits LayoutComponentBase

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />
<MessageBoxProvider />
<MudLayout>
    <MudAppBar>
        @* <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" /> *@
        <MudTooltip Text="Toggle light/dark theme">
            <MudIconButton Icon="@Icons.Material.Filled.Brightness4" Color="Color.Inherit" OnClick="@((e) => DarkMode())" />
        </MudTooltip>
        <MudContainer Class="d-flex flex-grow-1 flex-row justify-end">
            <MudImage Src="logo.png" Width="250" />
        </MudContainer>
    </MudAppBar>
    @* <MudDrawer @bind-Open="_drawerOpen" Elevation="25" Class="" Variant="DrawerVariant.Temporary" DisableOverlay="false" Width="300px" >
        <MudDrawerHeader LinkToIndex="true">
        </MudDrawerHeader>
        <NavMenu @ref="@_navMenuRef" />
    </MudDrawer> *@
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    private RenderFragment header;
    private bool _drawerOpen = false;
    private bool _rightToLeft = false;
    private NavMenu _navMenuRef;

    public RenderFragment Header
    {
        get => header;

        set
        {
            if (header != value)
            {
                header = value;
            }

            InvokeAsync(() => StateHasChanged());

        }
    }
    private MudTheme _currentTheme = new MudTheme();
    private readonly MudTheme _defaultTheme =
        new MudTheme()
        {
            Palette = new Palette()
            {
                Black = "#272c34"
            }
        };
    // private readonly MudTheme _darkTheme = new MudTheme()
    // {
    //     Palette = new Palette()
    //     {
    //         Black = "#27272f",
    //         Background = "#32333d",
    //         BackgroundGrey = "#27272f",
    //         Surface = "#373740",
    //         DrawerBackground = "#27272f",
    //         DrawerText = "rgba(255,255,255, 0.50)",
    //         AppbarBackground = "#27272f",
    //         AppbarText = "rgba(255,255,255, 0.70)",
    //         TextPrimary = "rgba(255,255,255, 0.70)",
    //         TextSecondary = "rgba(255,255,255, 0.50)",
    //         ActionDefault = "#adadb1",
    //         ActionDisabled = "rgba(255,255,255, 0.26)",
    //         ActionDisabledBackground = "rgba(255,255,255, 0.12)",
    //         DrawerIcon = "rgba(255,255,255, 0.50)"
    //     }
    // };

    private readonly MudTheme _darkTheme = new MudTheme()
        {
            Palette = new Palette()
            {
                Black = "#000000",
                Background = "#172238",

                Primary = "rgba(245, 164, 37, 1)", // urls, selected tab
                BackgroundGrey = "rgba(250,250,250,0.1)",
                Surface = "rgba(48,55,76, 1)",   // Background for combobox, muddialog
                DrawerBackground = "rgba(65, 75, 92, 1)",
                DrawerText = "rgba(255,255,255, 1)",
                AppbarBackground = "rgba(22,34,57,0.95)",
                AppbarText = "rgba(255,255,255, 1)",
                TextPrimary = "#ffffff",
                TextSecondary = "#ffffff", // Text color for combobox
                ActionDefault = "#adadb1",
                ActionDisabled = "rgba(255,255,255, 0.26)",
                ActionDisabledBackground = "rgba(255,255,255, 0.12)",
                DrawerIcon = "rgba(255,255,255, 1)"
            }
        };



    [Inject] private NavigationManager NavigationManager { get; set; }


    protected override void OnInitialized()
    {
        _currentTheme = _darkTheme;
        //if not home page, the navbar starts open
        if (!NavigationManager.IsHomePage())
        {
            _drawerOpen = true;
        }
    }

    private void DrawerToggle() => _drawerOpen = !_drawerOpen;

    private void DarkMode() => _currentTheme = _currentTheme == _defaultTheme ? _darkTheme : _defaultTheme;
}
