# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- main

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  project: 'Observer.Desktop/Observer.Desktop.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
# nbgv need a deep clone

- checkout: self
  fetchDepth: 0

# install nbgv tooling

- task: DotNetCoreCLI@2  
  displayName: Install NBGV tool
  inputs:
    command: custom
    custom: tool
    arguments: install --tool-path . nbgv

# allow nbgv to set the version

- script: nbgv cloud
  displayName: Set Version

- task: UseDotNet@2
  displayName: 'Use dotnet 8'
  inputs:
    version: '8.x'

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'
    vstsFeed: 'LeaderAnalyticsFeed'

- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    arguments: '--configuration $(buildConfiguration)'
    projects: $(project)

- task: DotNetCoreCLI@2
  displayName: "dotnet publish"
  inputs:
    command: publish
    publishWebProjects: false
    projects: $(project)
    arguments: -c Release -r win-x64 --self-contained true --output $(Build.ArtifactStagingDirectory)\publish
    zipAfterPublish: false


- script: |
    dotnet tool install -g vpk
    vpk pack -u LeaderAnalytics.Vyntix.Observer.Desktop --packTitle "Observer Desktop" -v 1.0.0 -p $(Build.ArtifactStagingDirectory)\Observer.Desktop\publish -e Observer.exe -i $(Build.ArtifactStagingDirectory)\publish\Observer.Desktop\icon.ico
    vpk upload github --repoUrl https://github.com/leaderanalytics/Observer.Desktop --publish --releaseName "Observer.Desktop 1.0.0" --tag v1.0.0



